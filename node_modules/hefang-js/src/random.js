"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var consts_1 = require("./consts");
function randomBytes(length) {
    var bytes = [];
    for (; length > 0; length--)
        bytes.push(Math.floor(Math.random() * 256));
    return bytes;
}
exports.randomBytes = randomBytes;
/**
 * 生成长度为length的随机字符串
 * @param length
 * @param src
 * @returns {string}
 */
function randString(length, src) {
    src = src || "" + consts_1.LOWER + consts_1.UPPER + consts_1.DIGIT + "`~!@#$%^&*()-=_+[]\\{}|;':\",./<>?";
    var i = 0, len = src.length - 1, buffer = '';
    for (; i < length; i++) {
        buffer += src.charAt(randNumber(0, len));
    }
    return buffer;
}
exports.randString = randString;
function randUpper(length) {
    return randString(length, consts_1.UPPER);
}
exports.randUpper = randUpper;
function randLower(length) {
    return randString(length, consts_1.LOWER);
}
exports.randLower = randLower;
function randLetter(length, containDigit) {
    if (containDigit === void 0) { containDigit = false; }
    return randString(length, "" + consts_1.UPPER + consts_1.LOWER + (containDigit ? consts_1.DIGIT : ""));
}
exports.randLetter = randLetter;
/**
 * 生成在min和max之间的随机数
 * @param min
 * @param max
 * @returns {Number}
 */
function randNumber(min, max) {
    return ~~(Math.random() * (max - min + 1) + min);
}
exports.randNumber = randNumber;
